// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: exprml/v1/encoder.proto

package exprmlv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Format of the output string.
type EncodeInput_Format int32

const (
	// YAML format.
	EncodeInput_YAML EncodeInput_Format = 0
	// JSON format.
	EncodeInput_JSON EncodeInput_Format = 1
)

// Enum value maps for EncodeInput_Format.
var (
	EncodeInput_Format_name = map[int32]string{
		0: "YAML",
		1: "JSON",
	}
	EncodeInput_Format_value = map[string]int32{
		"YAML": 0,
		"JSON": 1,
	}
)

func (x EncodeInput_Format) Enum() *EncodeInput_Format {
	p := new(EncodeInput_Format)
	*p = x
	return p
}

func (x EncodeInput_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EncodeInput_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_exprml_v1_encoder_proto_enumTypes[0].Descriptor()
}

func (EncodeInput_Format) Type() protoreflect.EnumType {
	return &file_exprml_v1_encoder_proto_enumTypes[0]
}

func (x EncodeInput_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EncodeInput_Format.Descriptor instead.
func (EncodeInput_Format) EnumDescriptor() ([]byte, []int) {
	return file_exprml_v1_encoder_proto_rawDescGZIP(), []int{0, 0}
}

// EncodeInput is the input message for the Encode method.
type EncodeInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Format of the output string.
	Format EncodeInput_Format `protobuf:"varint,1,opt,name=format,proto3,enum=exprml.v1.EncodeInput_Format" json:"format,omitempty"`
	// JSON value to encode.
	Value *Value `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EncodeInput) Reset() {
	*x = EncodeInput{}
	mi := &file_exprml_v1_encoder_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncodeInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodeInput) ProtoMessage() {}

func (x *EncodeInput) ProtoReflect() protoreflect.Message {
	mi := &file_exprml_v1_encoder_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodeInput.ProtoReflect.Descriptor instead.
func (*EncodeInput) Descriptor() ([]byte, []int) {
	return file_exprml_v1_encoder_proto_rawDescGZIP(), []int{0}
}

func (x *EncodeInput) GetFormat() EncodeInput_Format {
	if x != nil {
		return x.Format
	}
	return EncodeInput_YAML
}

func (x *EncodeInput) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

// EncodeOutput is the output message for the Encode method.
type EncodeOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether an error occurred during encoding.
	IsError bool `protobuf:"varint,1,opt,name=is_error,json=isError,proto3" json:"is_error,omitempty"`
	// Error message if is_error is true.
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Encoded YAML or JSON string.
	Result string `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *EncodeOutput) Reset() {
	*x = EncodeOutput{}
	mi := &file_exprml_v1_encoder_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncodeOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodeOutput) ProtoMessage() {}

func (x *EncodeOutput) ProtoReflect() protoreflect.Message {
	mi := &file_exprml_v1_encoder_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodeOutput.ProtoReflect.Descriptor instead.
func (*EncodeOutput) Descriptor() ([]byte, []int) {
	return file_exprml_v1_encoder_proto_rawDescGZIP(), []int{1}
}

func (x *EncodeOutput) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

func (x *EncodeOutput) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *EncodeOutput) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

var File_exprml_v1_encoder_proto protoreflect.FileDescriptor

var file_exprml_v1_encoder_proto_rawDesc = []byte{
	0x0a, 0x17, 0x65, 0x78, 0x70, 0x72, 0x6d, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x65, 0x78, 0x70, 0x72, 0x6d,
	0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x65, 0x78, 0x70, 0x72, 0x6d, 0x6c, 0x2f, 0x76, 0x31, 0x2f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x0b,
	0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x65, 0x78,
	0x70, 0x72, 0x6d, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x65, 0x78, 0x70, 0x72, 0x6d, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1c, 0x0a, 0x06, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x12, 0x08, 0x0a, 0x04, 0x59, 0x41, 0x4d, 0x4c, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x01, 0x22, 0x66, 0x0a, 0x0c, 0x45, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x32, 0x46, 0x0a, 0x07, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x06, 0x45,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x2e, 0x65, 0x78, 0x70, 0x72, 0x6d, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x17, 0x2e,
	0x65, 0x78, 0x70, 0x72, 0x6d, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x42, 0x95, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d,
	0x2e, 0x65, 0x78, 0x70, 0x72, 0x6d, 0x6c, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x45, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x78, 0x70, 0x72, 0x6d, 0x6c, 0x2f, 0x65, 0x78,
	0x70, 0x72, 0x6d, 0x6c, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x62, 0x2f, 0x65, 0x78, 0x70, 0x72, 0x6d,
	0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x78, 0x70, 0x72, 0x6d, 0x6c, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x45, 0x58, 0x58, 0xaa, 0x02, 0x09, 0x45, 0x78, 0x70, 0x72, 0x6d, 0x6c, 0x2e, 0x56, 0x31, 0xca,
	0x02, 0x09, 0x45, 0x78, 0x70, 0x72, 0x6d, 0x6c, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x15, 0x45, 0x78,
	0x70, 0x72, 0x6d, 0x6c, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x45, 0x78, 0x70, 0x72, 0x6d, 0x6c, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_exprml_v1_encoder_proto_rawDescOnce sync.Once
	file_exprml_v1_encoder_proto_rawDescData = file_exprml_v1_encoder_proto_rawDesc
)

func file_exprml_v1_encoder_proto_rawDescGZIP() []byte {
	file_exprml_v1_encoder_proto_rawDescOnce.Do(func() {
		file_exprml_v1_encoder_proto_rawDescData = protoimpl.X.CompressGZIP(file_exprml_v1_encoder_proto_rawDescData)
	})
	return file_exprml_v1_encoder_proto_rawDescData
}

var file_exprml_v1_encoder_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_exprml_v1_encoder_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_exprml_v1_encoder_proto_goTypes = []any{
	(EncodeInput_Format)(0), // 0: exprml.v1.EncodeInput.Format
	(*EncodeInput)(nil),     // 1: exprml.v1.EncodeInput
	(*EncodeOutput)(nil),    // 2: exprml.v1.EncodeOutput
	(*Value)(nil),           // 3: exprml.v1.Value
}
var file_exprml_v1_encoder_proto_depIdxs = []int32{
	0, // 0: exprml.v1.EncodeInput.format:type_name -> exprml.v1.EncodeInput.Format
	3, // 1: exprml.v1.EncodeInput.value:type_name -> exprml.v1.Value
	1, // 2: exprml.v1.Encoder.Encode:input_type -> exprml.v1.EncodeInput
	2, // 3: exprml.v1.Encoder.Encode:output_type -> exprml.v1.EncodeOutput
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_exprml_v1_encoder_proto_init() }
func file_exprml_v1_encoder_proto_init() {
	if File_exprml_v1_encoder_proto != nil {
		return
	}
	file_exprml_v1_value_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_exprml_v1_encoder_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_exprml_v1_encoder_proto_goTypes,
		DependencyIndexes: file_exprml_v1_encoder_proto_depIdxs,
		EnumInfos:         file_exprml_v1_encoder_proto_enumTypes,
		MessageInfos:      file_exprml_v1_encoder_proto_msgTypes,
	}.Build()
	File_exprml_v1_encoder_proto = out.File
	file_exprml_v1_encoder_proto_rawDesc = nil
	file_exprml_v1_encoder_proto_goTypes = nil
	file_exprml_v1_encoder_proto_depIdxs = nil
}
